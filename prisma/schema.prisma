generator client {
provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(dbgenerated()) @map("_id") @db.ObjectId
  username  String
  password  String
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now())
  email     String    @unique
  firstname String?
  lastname  String?
  status    String?    @default("active")
  roleId    String?   @db.ObjectId
  orders Order[]
  userRole  userRole?
}

model Role {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  userRole  userRole?
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now())
}

model userRole {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  roleId    String   @db.ObjectId
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])

}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  price       Float
  categoryId String     @db.ObjectId
  status     String     @default("active")
  description String
  image String
  rating String?
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @default(now())
  category   Category   @relation(fields: [categoryId], references: [id])
  Cartitems  cartItem[]

}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  status    String?   @default("active")
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @default(now())
  products  Product[]
}

model cartItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  userId String?   @db.ObjectId
  quantity  Int @default(1)
  image String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @default(now())
  status    String?     @default("active")
  totalPrice String
  product   Product  @relation(fields: [productId], references: [id])

}
model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
    userId  String @db.ObjectId
    amount Int 
    status    String?     @default("active")
    createdAt DateTime?  @default(now())
    updatedAt DateTime?  @default(now())
    user     User   @relation(fields: [userId],references:[id])

  
}
model attachment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
    type String
    originalname String
    filename String
    desc String ?   

}